# Generated by Django 5.0.6 on 2025-08-05 06:08

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='project',
            options={'ordering': ['-created_at'], 'verbose_name': '项目', 'verbose_name_plural': '项目'},
        ),
        migrations.AddField(
            model_name='project',
            name='completed_tasks',
            field=models.IntegerField(default=0, verbose_name='已完成任务数'),
        ),
        migrations.AddField(
            model_name='project',
            name='end_date',
            field=models.DateField(blank=True, null=True, verbose_name='结束时间'),
        ),
        migrations.AddField(
            model_name='project',
            name='progress',
            field=models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='项目进度'),
        ),
        migrations.AddField(
            model_name='project',
            name='project_type',
            field=models.CharField(choices=[('research', '研发项目'), ('academic', '学术项目'), ('design', '设计项目'), ('innovation', '创新实验'), ('other', '其他')], default='other', max_length=20, verbose_name='项目类型'),
        ),
        migrations.AddField(
            model_name='project',
            name='start_date',
            field=models.DateField(blank=True, null=True, verbose_name='开始时间'),
        ),
        migrations.AddField(
            model_name='project',
            name='status',
            field=models.CharField(choices=[('active', '进行中'), ('completed', '已完成'), ('pending', '待审核'), ('suspended', '暂停')], default='active', max_length=20, verbose_name='项目状态'),
        ),
        migrations.AddField(
            model_name='project',
            name='tags',
            field=models.TextField(blank=True, help_text='标签，用逗号分隔', verbose_name='项目标签'),
        ),
        migrations.AddField(
            model_name='project',
            name='task_count',
            field=models.IntegerField(default=0, verbose_name='任务总数'),
        ),
        migrations.AddField(
            model_name='projectmembership',
            name='contribution_description',
            field=models.TextField(blank=True, verbose_name='贡献描述'),
        ),
        migrations.AddField(
            model_name='projectmembership',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='是否活跃'),
        ),
        migrations.AddField(
            model_name='projectmembership',
            name='role',
            field=models.CharField(choices=[('owner', '项目负责人'), ('admin', '管理员'), ('member', '普通成员'), ('observer', '观察者')], default='member', max_length=20, verbose_name='角色'),
        ),
        migrations.CreateModel(
            name='Points',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_points', models.IntegerField(default=0, verbose_name='总积分')),
                ('available_points', models.IntegerField(default=0, verbose_name='可用积分')),
                ('used_points', models.IntegerField(default=0, verbose_name='已使用积分')),
                ('level', models.IntegerField(default=1, verbose_name='积分等级')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '用户积分',
                'verbose_name_plural': '用户积分',
            },
        ),
        migrations.CreateModel(
            name='PointsEvaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='评分名称')),
                ('description', models.TextField(blank=True, verbose_name='评分说明')),
                ('total_points', models.IntegerField(default=100, verbose_name='总分配积分')),
                ('status', models.CharField(choices=[('active', '进行中'), ('completed', '已完成'), ('cancelled', '已取消')], default='active', max_length=20, verbose_name='状态')),
                ('start_time', models.DateTimeField(verbose_name='开始时间')),
                ('end_time', models.DateTimeField(verbose_name='结束时间')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('participants', models.ManyToManyField(related_name='evaluations_participated', to=settings.AUTH_USER_MODEL, verbose_name='参与成员')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluations', to='projects.project', verbose_name='项目')),
            ],
            options={
                'verbose_name': '功分互评',
                'verbose_name_plural': '功分互评',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProjectDataAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_system_score', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='总系统分')),
                ('total_function_score', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='总功分')),
                ('total_score', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='总分')),
                ('avg_system_score', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=8, verbose_name='平均系统分')),
                ('avg_function_score', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=8, verbose_name='平均功分')),
                ('member_scores', models.JSONField(default=dict, help_text='存储每个成员的详细分数信息', verbose_name='成员分数详情')),
                ('analysis_summary', models.TextField(blank=True, verbose_name='分析摘要')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='最后更新时间')),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='data_analysis', to='projects.project', verbose_name='项目')),
            ],
            options={
                'verbose_name': '项目数据分析',
                'verbose_name_plural': '项目数据分析',
            },
        ),
        migrations.CreateModel(
            name='ProjectFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='project_files/%Y/%m/', verbose_name='文件')),
                ('name', models.CharField(max_length=255, verbose_name='文件名')),
                ('description', models.TextField(blank=True, verbose_name='文件描述')),
                ('file_size', models.PositiveIntegerField(verbose_name='文件大小(字节)')),
                ('file_type', models.CharField(max_length=50, verbose_name='文件类型')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='上传时间')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='projects.project', verbose_name='项目')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='上传者')),
            ],
            options={
                'verbose_name': '项目文件',
                'verbose_name_plural': '项目文件',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='RatingSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('theme', models.CharField(max_length=200, verbose_name='评分主题')),
                ('description', models.TextField(blank=True, verbose_name='评分说明')),
                ('status', models.CharField(choices=[('active', '进行中'), ('completed', '已结束')], default='active', max_length=20, verbose_name='状态')),
                ('total_points', models.IntegerField(default=100, verbose_name='总分数')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('ended_at', models.DateTimeField(blank=True, null=True, verbose_name='结束时间')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rating_sessions', to='projects.project', verbose_name='项目')),
                ('selected_members', models.ManyToManyField(related_name='rating_sessions', to=settings.AUTH_USER_MODEL, verbose_name='参与成员')),
            ],
            options={
                'verbose_name': '评分活动',
                'verbose_name_plural': '评分活动',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='任务标题')),
                ('description', models.TextField(blank=True, verbose_name='任务描述')),
                ('status', models.CharField(choices=[('pending', '待处理'), ('in_progress', '进行中'), ('completed', '已完成'), ('cancelled', '已取消')], default='pending', max_length=20, verbose_name='状态')),
                ('priority', models.CharField(choices=[('low', '低'), ('medium', '中'), ('high', '高'), ('urgent', '紧急')], default='medium', max_length=20, verbose_name='优先级')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='开始日期')),
                ('due_date', models.DateField(blank=True, null=True, verbose_name='截止日期')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='完成时间')),
                ('progress', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='完成进度')),
                ('estimated_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='预估工时')),
                ('actual_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, verbose_name='实际工时')),
                ('role_weights', models.JSONField(blank=True, default=dict, help_text='存储各角色在任务中的权重，格式：{"user_id": weight}', verbose_name='角色权重配置')),
                ('system_score', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=8, verbose_name='系统分')),
                ('function_score', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=8, verbose_name='功分')),
                ('time_coefficient', models.DecimalField(decimal_places=2, default=Decimal('1.00'), max_digits=3, verbose_name='时效系数')),
                ('tags', models.TextField(blank=True, help_text='标签，用逗号分隔', verbose_name='任务标签')),
                ('category', models.CharField(blank=True, max_length=50, verbose_name='任务分类')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='project_assigned_tasks', to=settings.AUTH_USER_MODEL, verbose_name='负责人')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_created_tasks', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='projects.project', verbose_name='所属项目')),
            ],
            options={
                'verbose_name': '任务',
                'verbose_name_plural': '任务',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TaskAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_weight', models.DecimalField(decimal_places=2, default=Decimal('1.00'), max_digits=3, verbose_name='角色权重')),
                ('system_score', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=8, verbose_name='系统分')),
                ('function_score', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=8, verbose_name='功分')),
                ('total_score', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=8, verbose_name='总分')),
                ('assigned_at', models.DateTimeField(auto_now_add=True, verbose_name='分配时间')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projects.task', verbose_name='任务')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '任务分配',
                'verbose_name_plural': '任务分配',
                'unique_together': {('task', 'user')},
            },
        ),
        migrations.AddField(
            model_name='task',
            name='assignees',
            field=models.ManyToManyField(related_name='assigned_tasks_extended', through='projects.TaskAssignment', to=settings.AUTH_USER_MODEL, verbose_name='任务负责人(多人)'),
        ),
        migrations.CreateModel(
            name='TaskAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='task_attachments/%Y/%m/', verbose_name='附件')),
                ('name', models.CharField(max_length=255, verbose_name='文件名')),
                ('description', models.TextField(blank=True, verbose_name='文件描述')),
                ('file_size', models.PositiveIntegerField(verbose_name='文件大小(字节)')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='上传时间')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='projects.task', verbose_name='任务')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_task_attachments', to=settings.AUTH_USER_MODEL, verbose_name='上传者')),
            ],
            options={
                'verbose_name': '任务附件',
                'verbose_name_plural': '任务附件',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='TaskComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='评论内容')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_task_comments', to=settings.AUTH_USER_MODEL, verbose_name='作者')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='projects.task', verbose_name='任务')),
            ],
            options={
                'verbose_name': '任务评论',
                'verbose_name_plural': '任务评论',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='WislabMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('membership_type', models.CharField(choices=[('normal', '普通会员'), ('vip', 'VIP会员'), ('premium', '高级会员')], default='normal', max_length=20, verbose_name='会员类型')),
                ('project_limit', models.IntegerField(default=5, help_text='普通会员最多参与的项目数量', verbose_name='项目限制')),
                ('expire_date', models.DateTimeField(blank=True, null=True, verbose_name='会员到期时间')),
                ('total_points', models.IntegerField(default=0, verbose_name='总积分')),
                ('available_points', models.IntegerField(default=0, verbose_name='可用积分')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='wislab_membership', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': 'WISlab会员',
                'verbose_name_plural': 'WISlab会员',
            },
        ),
        migrations.CreateModel(
            name='EvaluationRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(verbose_name='评分')),
                ('comment', models.TextField(blank=True, verbose_name='评分意见')),
                ('criteria_scores', models.JSONField(blank=True, default=dict, verbose_name='各项评分')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='评分时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('evaluated_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_evaluations_received', to=settings.AUTH_USER_MODEL, verbose_name='被评分者')),
                ('evaluator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_evaluations_given', to=settings.AUTH_USER_MODEL, verbose_name='评分者')),
                ('evaluation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluation_records', to='projects.pointsevaluation', verbose_name='评分活动')),
            ],
            options={
                'verbose_name': '评分记录',
                'verbose_name_plural': '评分记录',
                'ordering': ['-created_at'],
                'unique_together': {('evaluation', 'evaluator', 'evaluated_user')},
            },
        ),
        migrations.CreateModel(
            name='ProjectPoints',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField(default=0, verbose_name='分配积分')),
                ('contribution_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, verbose_name='贡献评分')),
                ('allocation_reason', models.TextField(blank=True, verbose_name='分配原因')),
                ('is_final', models.BooleanField(default=False, verbose_name='是否最终分配')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('allocated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='point_allocations_made', to=settings.AUTH_USER_MODEL, verbose_name='分配者')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='point_allocations', to='projects.project', verbose_name='项目')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'verbose_name': '项目积分分配',
                'verbose_name_plural': '项目积分分配',
                'ordering': ['-created_at'],
                'unique_together': {('project', 'user')},
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='评分')),
                ('remark', models.TextField(blank=True, verbose_name='评分备注')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='评分时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('rater', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='given_ratings', to=settings.AUTH_USER_MODEL, verbose_name='评分者')),
                ('target', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_ratings', to=settings.AUTH_USER_MODEL, verbose_name='被评分者')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='projects.ratingsession', verbose_name='评分活动')),
            ],
            options={
                'verbose_name': '评分记录',
                'verbose_name_plural': '评分记录',
                'ordering': ['-created_at'],
                'unique_together': {('session', 'rater', 'target')},
            },
        ),
        migrations.CreateModel(
            name='ProjectLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_type', models.CharField(choices=[('project_created', '项目创建'), ('project_updated', '项目更新'), ('member_joined', '成员加入'), ('member_left', '成员离开'), ('member_role_changed', '成员角色变更'), ('task_created', '任务创建'), ('task_updated', '任务更新'), ('task_completed', '任务完成'), ('task_deleted', '任务删除'), ('file_uploaded', '文件上传'), ('file_deleted', '文件删除'), ('rating_created', '评分创建'), ('rating_completed', '评分完成'), ('comment_added', '评论添加'), ('milestone_reached', '里程碑达成'), ('status_changed', '状态变更'), ('other', '其他操作')], max_length=50, verbose_name='日志类型')),
                ('title', models.CharField(max_length=200, verbose_name='日志标题')),
                ('description', models.TextField(blank=True, verbose_name='详细描述')),
                ('changes', models.JSONField(blank=True, default=dict, verbose_name='变更内容')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='元数据')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='projects.project', verbose_name='项目')),
                ('related_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='project_logs_about', to=settings.AUTH_USER_MODEL, verbose_name='相关用户')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='操作用户')),
                ('related_task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='projects.task', verbose_name='相关任务')),
            ],
            options={
                'verbose_name': '项目日志',
                'verbose_name_plural': '项目日志',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['project', '-created_at'], name='projects_pr_project_fdc85d_idx'), models.Index(fields=['log_type', '-created_at'], name='projects_pr_log_typ_ec0747_idx'), models.Index(fields=['user', '-created_at'], name='projects_pr_user_id_df8ef0_idx')],
            },
        ),
        migrations.CreateModel(
            name='PointsHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('change_type', models.CharField(choices=[('earn', '获得'), ('spend', '消费'), ('transfer', '转账'), ('reward', '奖励'), ('penalty', '扣除'), ('refund', '退还')], max_length=20, verbose_name='变动类型')),
                ('points', models.IntegerField(verbose_name='积分变动')),
                ('reason', models.CharField(max_length=200, verbose_name='变动原因')),
                ('balance_after', models.IntegerField(verbose_name='变动后余额')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('related_project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='projects.project', verbose_name='相关项目')),
                ('related_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='points_from', to=settings.AUTH_USER_MODEL, verbose_name='相关用户')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户')),
                ('related_task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='projects.task', verbose_name='相关任务')),
            ],
            options={
                'verbose_name': '积分历史',
                'verbose_name_plural': '积分历史',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', '-created_at'], name='projects_po_user_id_4e7bd7_idx'), models.Index(fields=['change_type', '-created_at'], name='projects_po_change__56fd3d_idx')],
            },
        ),
    ]
